'''
Created on Dec 7, 2015

@author: tai
'''
import theano
import theano.tensor as T

class Network(object):
    def __init__(self, training_data, validation_data, ls_layers, optimize_method):
         """
         """
         self.Xtrain, self.Ytrain = training_data
         self.Xvalidate, self.Yvalidate = validation_data
         self.n_train_data = self.Xtrain.shape[0]
         
    def prepare(self, eta):
        x = T.matrix(name='x')
        y = T.matrix(name='y')
        
        ## Forward propagation
        a = x
        for layer in self.layers:
            a = layer.forward_propagatioin(a)
            
        ## Define functions such as cost function, predict Function
        cost = -T.mean(T.log(a)[T.arange(y.shape[0]), y.T])