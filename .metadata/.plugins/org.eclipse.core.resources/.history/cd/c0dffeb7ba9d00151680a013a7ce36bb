'''
Created on Dec 8, 2015

@author: tai
'''

import Layers
import theano
import theano.tensor as T

class SGD(object):
    def __init__(self, learning_rate):
        self.eta = learning_rate
        
    def Update(self, ls_layers, grad_Ws, grad_Bs):
        updates = []
        for layer, grad_w, grad_b in zip(ls_layers, grad_Ws, grad_Bs):
            updates.append((layer.weights, layer.weights - (self.eta * grad_w)))
            updates.append((layer.biases, layer.biases - (self.eta * grad_b)))
        
        return updates

class Momentum(object):
    def __init__(self, learning_rate):
        self.eta = learning_rate
    
    def Update(self, ls_layers, grad_Ws, grad_Bs):
        updates = []
        